
./bin/mi_bios.elf:     formato del fichero elf32-i386
./bin/mi_bios.elf
arquitectura: i386, opciones 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
direcci√≥n de inicio 0xfffffff0

Encabezado del Programa:
    LOAD off    0x00001000 vaddr 0xffff0000 paddr 0xffff0000 align 2**12
         filesz 0x00000083 memsz 0x00000083 flags r--
    LOAD off    0x00002000 vaddr 0x00010000 paddr 0xffff1000 align 2**12
         filesz 0x00000040 memsz 0x00000040 flags r-x
    LOAD off    0x00003000 vaddr 0x00202000 paddr 0xffff2000 align 2**12
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00004000 vaddr 0x00000000 paddr 0xffff3000 align 2**12
         filesz 0x0000019c memsz 0x0000019c flags r--
    LOAD off    0x00005000 vaddr 0x00100000 paddr 0xffff4000 align 2**12
         filesz 0x0000008b memsz 0x0000008b flags r--
    LOAD off    0x00005800 vaddr 0xfffff800 paddr 0xfffff800 align 2**12
         filesz 0x00000800 memsz 0x00000800 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Secciones:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .sys_tables_32 0000019c  00000000  ffff3000  00004000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .teclados_isr 0000008b  00100000  ffff4000  00005000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .functions    00000040  00010000  ffff1000  00002000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .codigo_kernel32 00000008  00202000  ffff2000  00003000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .codigo_init16 00000083  ffff0000  ffff0000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .codigo_init32 000000ae  fffff800  fffff800  00005800  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .functions_rom 00000040  fffffc00  fffffc00  00005c00  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .sys_tables_16 0000001e  fffffd00  fffffd00  00005d00  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .codigo_reset 00000008  fffffff0  fffffff0  00005ff0  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .fill_rom     00000008  fffffff8  fffffff8  00005ff8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .comment      00000026  00000000  00000000  00006000  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .sys_tables_32	00000000 .sys_tables_32
00100000 l    d  .teclados_isr	00000000 .teclados_isr
00010000 l    d  .functions	00000000 .functions
00202000 l    d  .codigo_kernel32	00000000 .codigo_kernel32
ffff0000 l    d  .codigo_init16	00000000 .codigo_init16
fffff800 l    d  .codigo_init32	00000000 .codigo_init32
fffffc00 l    d  .functions_rom	00000000 .functions_rom
fffffd00 l    d  .sys_tables_16	00000000 .sys_tables_16
fffffff0 l    d  .codigo_reset	00000000 .codigo_reset
fffffff8 l    d  .fill_rom	00000000 .fill_rom
00000000 l    d  .comment	00000000 .comment
00000000 l    df *ABS*	00000000 src/sys_tables.asm
fffffd00 l       .sys_tables_16	00000000 GDT16
00000000 l       *ABS*	00000000 NULL_SEL_16
00000018 l       *ABS*	00000000 GDT16_LENGTH
0000017e l       .sys_tables_32	00000000 GDT
00000000 l       *ABS*	00000000 NULL_SEL
00000018 l       *ABS*	00000000 GDT_LENGTH
00000000 l       *ABS*	00000000 IDT_struct_t
00000000 l       *ABS*	00000000 IDT_struct_t.offset_15_0_0
00000002 l       *ABS*	00000000 IDT_struct_t.code_31_16_0
00000004 l       *ABS*	00000000 IDT_struct_t.attributos_7_0_1
00000005 l       *ABS*	00000000 IDT_struct_t.attributos_15_8_1
00000006 l       *ABS*	00000000 IDT_struct_t.offset_31_16_1
00000008 l       *ABS*	00000000 IDT_struct_t_size
00000000 l       .sys_tables_32	00000000 IDT
00000000 l       *ABS*	00000000 ISR00_idt
00000008 l       *ABS*	00000000 ISR01_idt
00000010 l       *ABS*	00000000 ISR02_idt
00000018 l       *ABS*	00000000 ISR03_idt
00000020 l       *ABS*	00000000 ISR04_idt
00000028 l       *ABS*	00000000 ISR05_idt
00000030 l       *ABS*	00000000 ISR06_idt
00000038 l       *ABS*	00000000 ISR07_idt
00000040 l       *ABS*	00000000 ISR08_idt
00000048 l       *ABS*	00000000 ISR09_idt
00000050 l       *ABS*	00000000 ISR10_idt
00000058 l       *ABS*	00000000 ISR11_idt
00000060 l       *ABS*	00000000 ISR12_idt
00000068 l       *ABS*	00000000 ISR13_idt
00000070 l       *ABS*	00000000 ISR14_idt
00000078 l       *ABS*	00000000 ISR15_idt
00000080 l       *ABS*	00000000 ISR16_idt
00000088 l       *ABS*	00000000 ISR17_idt
00000090 l       *ABS*	00000000 ISR18_idt
00000098 l       *ABS*	00000000 ISR19_idt
000000a0 l       *ABS*	00000000 ISR20to31_idt
00000100 l       *ABS*	00000000 ISR32to46_idt
00000178 l       *ABS*	00000000 IDT_LENGTH
00000000 l    df *ABS*	00000000 src/main.asm
00100000 l       .teclados_isr	00000000 pool_teclado
0010001e l       .teclados_isr	00000000 key_U
00100036 l       .teclados_isr	00000000 key_I
0010003a l       .teclados_isr	00000000 key_S
0010003e l       .teclados_isr	00000000 key_A
00100042 l       .teclados_isr	00000000 key_out
00100048 l       .teclados_isr	00000000 key_out.guard
00100055 l       .teclados_isr	00000000 ISR01_Handler_DB
00100058 l       .teclados_isr	00000000 ISR02_Handler_NMI
0010005b l       .teclados_isr	00000000 ISR03_Handler_BP
0010005e l       .teclados_isr	00000000 ISR04_Handler_OF
00100061 l       .teclados_isr	00000000 ISR05_Handler_BR
00100064 l       .teclados_isr	00000000 ISR06_Handler_UD
00100067 l       .teclados_isr	00000000 ISR07_Handler_NM
0010006a l       .teclados_isr	00000000 ISR08_Handler_DF
0010006d l       .teclados_isr	00000000 ISR10_Handler_TS
00100070 l       .teclados_isr	00000000 ISR11_Handler_NP
00100073 l       .teclados_isr	00000000 ISR12_Handler_SS
00100076 l       .teclados_isr	00000000 ISR13_Handler_GP
00100079 l       .teclados_isr	00000000 ISR14_Handler_PF
0010007c l       .teclados_isr	00000000 ISR15_Handler_RES
0010007f l       .teclados_isr	00000000 ISR16_Handler_MF
00100082 l       .teclados_isr	00000000 ISR17_Handler_AC
00100085 l       .teclados_isr	00000000 ISR18_Handler_MC
00100088 l       .teclados_isr	00000000 ISR19_Handler_XM
00000000 l    df *ABS*	00000000 functions.c
00000000 l    df *ABS*	00000000 src/init16.asm
ffff000a l       .codigo_init16	00000000 A20_Enable_No_Stack_return
ffff0043 l       .codigo_init16	00000000 fault_end
ffff0044 l       .codigo_init16	00000000 A20_Enable_No_Stack
ffff004b l       .codigo_init16	00000000 A20_Enable_No_Stack.8042_kbrd_dis
ffff0054 l       .codigo_init16	00000000 A20_Enable_No_Stack.8042_read_out
ffff0058 l       .codigo_init16	00000000 A20_Enable_No_Stack.empty_8042_out
ffff0063 l       .codigo_init16	00000000 A20_Enable_No_Stack.8042_write_out
ffff006c l       .codigo_init16	00000000 A20_Enable_No_Stack.8042_set_a20
ffff0078 l       .codigo_init16	00000000 A20_Enable_No_Stack.8042_kbrd_en
ffff007f l       .codigo_init16	00000000 A20_Enable_No_Stack.empty_8042_in
ffff0081 l       .codigo_init16	00000000 A20_Enable_No_Stack.a20_enable_no_stack_exit
ffff0083 l       .codigo_init16	00000000 endcode
00000000 l    df *ABS*	00000000 src/init32.asm
fffff81a l       .codigo_init32	00000000 start32_launcher.stack_init
fffff8ab l       .codigo_init32	00000000 start32_launcher.guard
00000000 l    df *ABS*	00000000 functions_rom.c
00000000 l    df *ABS*	00000000 src/reset.asm
fffffff5 l       .codigo_reset	00000000 halted
fffffff8 l       .codigo_reset	00000000 end
fffffff0 g       *ABS*	00000000 __RESET_LMA
ffff1000 g       *ABS*	00000000 __FUNCTIONS_LMA
0000106d g       .teclados_isr	00000000 ISR10_Handler_TS_off
00000040 g       *ABS*	00000000 __functions_size
fffffc00 g       *ABS*	00000000 __FUNCTIONS_ROM_VMA
ffff0000 g       *ABS*	00000000 __INIT_16_LMA
fffffc00 g       *ABS*	00000000 __FUNCTIONS_ROM_LMA
00001061 g       .teclados_isr	00000000 ISR05_Handler_BR_off
0000105e g       .teclados_isr	00000000 ISR04_Handler_OF_off
fffffff0 g       .codigo_reset	00000000 reset
00100000 g       *ABS*	00000000 __TECLADO_ISR_VMA
2fff8000 g       *ABS*	00000000 __STACK_START_32
00010000 g       *ABS*	00000000 __FUNCTIONS_VMA
ffff0000 g       *ABS*	00000000 __INIT_16_VMA
00001085 g       .teclados_isr	00000000 ISR18_Handler_MC_off
00001058 g       .teclados_isr	00000000 ISR02_Handler_NMI_off
00000196 g       .sys_tables_32	00000000 _gdtr
0010004d g       .teclados_isr	00000000 ISR00_Handler_DE_off
00000000 g       *ABS*	00000000 __SYS_TABLES_32_VMA
00009000 g       *ABS*	00000000 __STACK_START_16
ffff4000 g       *ABS*	00000000 __TECLADO_ISR_LMA
00202000 g       .codigo_kernel32	00000000 kernel32_init
00001076 g       .teclados_isr	00000000 ISR13_Handler_GP_off
2fff8fff g       *ABS*	00000000 __STACK_END_32
00202000 g       *ABS*	00000000 __KERNEL_32_VMA
00000010 g       *ABS*	00000000 DS_SEL_16
00010000 g     F .functions	00000040 __fast_memcpy
00000008 g       *ABS*	00000000 CS_SEL_32
00001082 g       .teclados_isr	00000000 ISR17_Handler_AC_off
00000010 g       *ABS*	00000000 DS_SEL_32
000003ff g       *ABS*	00000000 __STACK_SIZE_32
00009fff g       *ABS*	00000000 __STACK_END_16
00001070 g       .teclados_isr	00000000 ISR11_Handler_NP_off
ffff2000 g       *ABS*	00000000 __KERNEL_32_LMA
00000008 g       *ABS*	00000000 CS_SEL_16
00001088 g       .teclados_isr	00000000 ISR19_Handler_XM_off
fffffff0 g       *ABS*	00000000 __RESET_VMA
00000178 g       .sys_tables_32	00000000 _idtr
fffff800 g       *ABS*	00000000 __INIT_32_VMA
00060000 g       *ABS*	00000000 __EH_FRAME
0000106a g       .teclados_isr	00000000 ISR08_Handler_DF_off
00050000 g       *ABS*	00000000 __DATA_NO_INIT
0000019c g       *ABS*	00000000 __sys_tables_size
0000107f g       .teclados_isr	00000000 ISR16_Handler_MF_off
0000105b g       .teclados_isr	00000000 ISR03_Handler_BP_off
fffffd00 g       *ABS*	00000000 __SYS_TABLES_16_VMA
00001064 g       .teclados_isr	00000000 ISR06_Handler_UD_off
fffffd00 g       *ABS*	00000000 __SYS_TABLES_16_LMA
fffffd18 g       .sys_tables_16	00000000 _gdtr16
0000008b g       *ABS*	00000000 __teclados_isr_size
ffff0000 g       .codigo_init16	00000000 start16
ffff3000 g       *ABS*	00000000 __SYS_TABLES_32_LMA
00001073 g       .teclados_isr	00000000 ISR12_Handler_SS_off
00001067 g       .teclados_isr	00000000 ISR07_Handler_NM_off
fffff800 g       *ABS*	00000000 __INIT_32_LMA
00000008 g       *ABS*	00000000 __codigo_kernel32_size
0010004e g       .teclados_isr	00000000 ISR00_Handler_DE
fffffc00 g     F .functions_rom	00000040 __fast_memcpy_rom
fffff800 g       .codigo_init32	00000000 start32_launcher
00001079 g       .teclados_isr	00000000 ISR14_Handler_PF_off


Contenido de la secci√≥n .sys_tables_32:
 0000 4e200800 008f2000 00000000 00000000  N .... .........
 0010 58100800 008f0000 5b100800 008f0000  X.......[.......
 0020 5e100800 008f0000 61100800 008f0000  ^.......a.......
 0030 64100800 008f0000 67100800 008f0000  d.......g.......
 0040 6a100800 008f0000 00000000 00000000  j...............
 0050 6d100800 008f0000 70100800 008f0000  m.......p.......
 0060 73100800 008f0000 76100800 008f0000  s.......v.......
 0070 79100800 008f0000 00000000 00000000  y...............
 0080 7f100800 008f0000 82100800 008f0000  ................
 0090 85100800 008f0000 88100800 008f0000  ................
 00a0 00000000 00000000 00000000 00000000  ................
 00b0 00000000 00000000 00000000 00000000  ................
 00c0 00000000 00000000 00000000 00000000  ................
 00d0 00000000 00000000 00000000 00000000  ................
 00e0 00000000 00000000 00000000 00000000  ................
 00f0 00000000 00000000 00000000 00000000  ................
 0100 00000000 00000000 00000000 00000000  ................
 0110 00000000 00000000 00000000 00000000  ................
 0120 00000000 00000000 00000000 00000000  ................
 0130 00000000 00000000 00000000 00000000  ................
 0140 00000000 00000000 00000000 00000000  ................
 0150 00000000 00000000 00000000 00000000  ................
 0160 00000000 00000000 00000000 00000000  ................
 0170 00000000 00000000 77010000 00000000  ........w.......
 0180 00000000 0000ffff 00000099 cf00ffff  ................
 0190 00000092 cf001700 7e010000           ........~...    
Contenido de la secci√≥n .teclados_isr:
 100000 31c0e464 5083e001 83f80158 75f2e460  1..dP......Xu..`
 100010 50258000 00003d80 00000058 75e23c96  P%....=....Xu.<.
 100020 75146687 dbba0000 0000b802 000000be  u.f.............
 100030 00000000 f7f63c97 75003c9f 75003c9e  ......<.u.<.u.<.
 100040 75003c81 75baeb00 6687dbf4 ebfa6687  u.<.u...f.....f.
 100050 dbb200c3 f4b200f4 b200f4b2 00f4b200  ................
 100060 f4b200f4 b200f4b2 00f4b200 f4b200f4  ................
 100070 b200f4b2 00f4b200 f4b200f4 b200f4b2  ................
 100080 00f4b200 f4b200f4 b200f4             ...........     
Contenido de la secci√≥n .functions:
 10000 f30f1efb 5589e583 ec10c645 ff00837d  ....U......E...}
 10010 10007426 eb1a836d 10018b55 088d4204  ..t&...m...U..B.
 10020 8945088b 450c8d48 04894d0c 8b128910  .E..E..H..M.....
 10030 837d1000 75e0c645 ff010fb6 45ffc9c3  .}..u..E....E...
Contenido de la secci√≥n .codigo_kernel32:
 202000 909090e9 f8dfefff                    ........        
Contenido de la secci√≥n .codigo_init16:
 ffff0000 66a90000 0000753b eb3a6631 c00f22d8  f.....u;.:f1..".
 ffff0010 8cc88ed8 b800908e d0bcff9f 0f20c066  ............. .f
 ffff0020 0d000000 600f22c0 0f090f01 1618fd0f  ....`.".........
 ffff0030 01e083c8 010f01f0 90909066 ea00f8ff  ...........f....
 ffff0040 ff0800f4 31c0bf4b 00eb34b0 ade664bf  ....1..K..4...d.
 ffff0050 5400eb2b b0d0e664 31dbe460 89c3bf63  T..+...d1..`...c
 ffff0060 00eb1cb0 d1e664bf 6c00eb13 89d883c8  ......d.l.......
 ffff0070 02e660bf 7800eb07 b0aee664 bf8100ff  ..`.x......d....
 ffff0080 e7eb87                               ...             
Contenido de la secci√≥n .codigo_init32:
 fffff800 66b81000 8ed88ec0 8ee88ee0 8ed0bcff  f...............
 fffff810 8fff2f31 c0b9ff03 000050e2 fdbcff8f  ../1......P.....
 fffff820 ff2f5589 e5689c01 00006800 00000068  ./U..h....h....h
 fffff830 0030ffff e8c70300 00c983f8 01756c0f  .0...........ul.
 fffff840 01159601 00000f01 1d780100 005589e5  .........x...U..
 fffff850 68400000 00680000 01006800 10ffffe8  h@...h....h.....
 fffff860 9c030000 c983f801 75415589 e5680800  ........uAU..h..
 fffff870 00006800 20200068 0020ffff e87f0300  ..h.  .h. ......
 fffff880 00c983f8 01752455 89e5688b 00000068  .....u$U..h....h
 fffff890 0040ffff 680040ff ffe86203 0000c983  .@..h.@...b.....
 fffff8a0 f8017507 ea002020 000800f4 ebfd      ..u...  ......  
Contenido de la secci√≥n .functions_rom:
 fffffc00 f30f1efb 5589e583 ec10c645 ff00837d  ....U......E...}
 fffffc10 10007426 eb1a836d 10018b55 088d4204  ..t&...m...U..B.
 fffffc20 8945088b 450c8d48 04894d0c 8b128910  .E..E..H..M.....
 fffffc30 837d1000 75e0c645 ff010fb6 45ffc9c3  .}..u..E....E...
Contenido de la secci√≥n .sys_tables_16:
 fffffd00 00000000 00000000 ffff0000 009acf00  ................
 fffffd10 ffff0000 0092cf00 170000fd 0f00      ..............  
Contenido de la secci√≥n .codigo_reset:
 fffffff0 fafce90b 00f4ebfd                    ........        
Contenido de la secci√≥n .fill_rom:
 fffffff8 90909090 90909090                    ........        
Contenido de la secci√≥n .comment:
 0000 4743433a 20285562 756e7475 2031302e  GCC: (Ubuntu 10.
 0010 322e302d 31337562 756e7475 31292031  2.0-13ubuntu1) 1
 0020 302e322e 3000                        0.2.0.          

Desensamblado de la secci√≥n .functions:
00010000 <__fast_memcpy> endbr32 
00010004 <__fast_memcpy+0x4> push   %ebp
00010005 <__fast_memcpy+0x5> mov    %esp,%ebp
00010007 <__fast_memcpy+0x7> sub    $0x10,%esp
0001000a <__fast_memcpy+0xa> movb   $0x0,-0x1(%ebp)
0001000e <__fast_memcpy+0xe> cmpl   $0x0,0x10(%ebp)
00010012 <__fast_memcpy+0x12> je     0001003a <__fast_memcpy+0x3a>
00010014 <__fast_memcpy+0x14> jmp    00010030 <__fast_memcpy+0x30>
00010016 <__fast_memcpy+0x16> subl   $0x1,0x10(%ebp)
0001001a <__fast_memcpy+0x1a> mov    0x8(%ebp),%edx
0001001d <__fast_memcpy+0x1d> lea    0x4(%edx),%eax
00010020 <__fast_memcpy+0x20> mov    %eax,0x8(%ebp)
00010023 <__fast_memcpy+0x23> mov    0xc(%ebp),%eax
00010026 <__fast_memcpy+0x26> lea    0x4(%eax),%ecx
00010029 <__fast_memcpy+0x29> mov    %ecx,0xc(%ebp)
0001002c <__fast_memcpy+0x2c> mov    (%edx),%edx
0001002e <__fast_memcpy+0x2e> mov    %edx,(%eax)
00010030 <__fast_memcpy+0x30> cmpl   $0x0,0x10(%ebp)
00010034 <__fast_memcpy+0x34> jne    00010016 <__fast_memcpy+0x16>
00010036 <__fast_memcpy+0x36> movb   $0x1,-0x1(%ebp)
0001003a <__fast_memcpy+0x3a> movzbl -0x1(%ebp),%eax
0001003e <__fast_memcpy+0x3e> leave  
0001003f <__fast_memcpy+0x3f> ret    

Desensamblado de la secci√≥n .functions_rom:
fffffc00 <__fast_memcpy_rom> endbr32 
fffffc04 <__fast_memcpy_rom+0x4> push   %ebp
fffffc05 <__fast_memcpy_rom+0x5> mov    %esp,%ebp
fffffc07 <__fast_memcpy_rom+0x7> sub    $0x10,%esp
fffffc0a <__fast_memcpy_rom+0xa> movb   $0x0,-0x1(%ebp)
fffffc0e <__fast_memcpy_rom+0xe> cmpl   $0x0,0x10(%ebp)
fffffc12 <__fast_memcpy_rom+0x12> je     fffffc3a <__fast_memcpy_rom+0x3a>
fffffc14 <__fast_memcpy_rom+0x14> jmp    fffffc30 <__fast_memcpy_rom+0x30>
fffffc16 <__fast_memcpy_rom+0x16> subl   $0x1,0x10(%ebp)
fffffc1a <__fast_memcpy_rom+0x1a> mov    0x8(%ebp),%edx
fffffc1d <__fast_memcpy_rom+0x1d> lea    0x4(%edx),%eax
fffffc20 <__fast_memcpy_rom+0x20> mov    %eax,0x8(%ebp)
fffffc23 <__fast_memcpy_rom+0x23> mov    0xc(%ebp),%eax
fffffc26 <__fast_memcpy_rom+0x26> lea    0x4(%eax),%ecx
fffffc29 <__fast_memcpy_rom+0x29> mov    %ecx,0xc(%ebp)
fffffc2c <__fast_memcpy_rom+0x2c> mov    (%edx),%edx
fffffc2e <__fast_memcpy_rom+0x2e> mov    %edx,(%eax)
fffffc30 <__fast_memcpy_rom+0x30> cmpl   $0x0,0x10(%ebp)
fffffc34 <__fast_memcpy_rom+0x34> jne    fffffc16 <__fast_memcpy_rom+0x16>
fffffc36 <__fast_memcpy_rom+0x36> movb   $0x1,-0x1(%ebp)
fffffc3a <__fast_memcpy_rom+0x3a> movzbl -0x1(%ebp),%eax
fffffc3e <__fast_memcpy_rom+0x3e> leave  
fffffc3f <__fast_memcpy_rom+0x3f> ret    
